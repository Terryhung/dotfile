#!/usr/bin/env ruby

require 'net/ssh'
require 'optparse'
require 'json'

if ARGV.length != 1
  puts "need kernel file"
  abort
end

PORT_NAMES  = %w(stdin_port control_port hb_port shell_port iopub_port)
kernel_file = ARGV[0]
data        = nil
ports       = "-L 12345:localhost:8888"

if File.exist?(kernel_file)
  data = JSON.parse(IO.read(kernel_file))
else
  Net::SSH.start('cl_2', 'lazywei') do |ssh|
    output = ssh.exec!("cat ~/.ipython/profile_default/security/#{kernel_file}")

    File.open(kernel_file, 'w') do |f|
      f.puts output
    end

    data = JSON.parse(output)
  end
end


PORT_NAMES.each do |name|
  port = data[name]
  ports = "#{ports} -L #{port}:localhost:#{port}"
end

puts "You can now connect with: --existing #{kernel_file}"

system( "ssh cl_2 #{ports}" )
